<UserControl
	x:Class="Krisp.UI.Views.Controls.OnboardingSetupView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:l="clr-namespace:Krisp.UI" xmlns:Controls="clr-namespace:Krisp.UI.Views.Controls" xmlns:media="https://github.com/JohanLarsson/Gu.Wpf.Media"
	FontFamily="{StaticResource KrispFont}"
	Height="643"
	Width="1083"
	Background="#FFFFFFFF">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<Style
				x:Key="{x:Type Hyperlink}"
				TargetType="{x:Type Hyperlink}">
				<Style.Triggers>
					<Trigger
						Property="ContentElement.IsMouseOver"
						Value="True">
						<Setter
							Property="TextElement.Foreground"
							Value="#ACB6FF" />
					</Trigger>
				</Style.Triggers>
				<Setter
					Property="TextElement.Foreground"
					Value="#6371DE" />
				<Setter
					Property="TextElement.FontWeight"
					Value="Bold" />
				<Setter
					Property="Inline.TextDecorations"
					Value="None" />
			</Style>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<UIElement.InputBindings>
		<KeyBinding
			Key="Space"
			Command="TogglePlayPause"
			CommandTarget="{Binding ElementName=MediaElement}" />
		<KeyBinding
			Key="Left"
			Command="media:Commands.SkipBack"
			CommandTarget="{Binding ElementName=MediaElement}" />
		<MouseBinding
			Command="media:Commands.SkipBack"
			CommandTarget="{Binding ElementName=MediaElement}">
			<MouseBinding.Gesture>
				<media1:MouseWheelGesture xmlns:media1="clr-namespace:Gu.Wpf.Media;assembly=Gu.Wpf.Media"
					media1:MouseWheelGesture.Direction="Down" />
			</MouseBinding.Gesture>
		</MouseBinding>
		<KeyBinding
			Key="Left"
			Command="media:Commands.SkipBack"
			CommandParameter="60"
			Modifiers="Control"
			CommandTarget="{Binding ElementName=MediaElement}" />
		<MouseBinding
			Command="media:Commands.SkipBack"
			CommandParameter="60"
			CommandTarget="{Binding ElementName=MediaElement}">
			<MouseBinding.Gesture>
				<MouseWheelGesture
					p9:MouseWheelGesture.Direction="Down"
					MouseGesture.Modifiers="Control" xmlns:p9="clr-namespace:Gu.Wpf.Media;assembly=Gu.Wpf.Media" xmlns="clr-namespace:Gu.Wpf.Media;assembly=Gu.Wpf.Media" />
			</MouseBinding.Gesture>
		</MouseBinding>
		<KeyBinding
			Key="Right"
			Command="media:Commands.SkipForward"
			CommandTarget="{Binding ElementName=MediaElement}" />
		<MouseBinding
			Command="media:Commands.SkipForward"
			CommandTarget="{Binding ElementName=MediaElement}">
			<MouseBinding.Gesture>
				<MouseWheelGesture
					p9:MouseWheelGesture.Direction="Up" xmlns:p9="clr-namespace:Gu.Wpf.Media;assembly=Gu.Wpf.Media" xmlns="clr-namespace:Gu.Wpf.Media;assembly=Gu.Wpf.Media" />
			</MouseBinding.Gesture>
		</MouseBinding>
		<KeyBinding
			Key="Right"
			Command="media:Commands.SkipForward"
			CommandParameter="60"
			Modifiers="Control"
			CommandTarget="{Binding ElementName=MediaElement}" />
		<MouseBinding
			Command="media:Commands.SkipForward"
			CommandParameter="60"
			CommandTarget="{Binding ElementName=MediaElement}">
			<MouseBinding.Gesture>
				<MouseWheelGesture
					p9:MouseWheelGesture.Direction="Up"
					MouseGesture.Modifiers="Control" xmlns:p9="clr-namespace:Gu.Wpf.Media;assembly=Gu.Wpf.Media" xmlns="clr-namespace:Gu.Wpf.Media;assembly=Gu.Wpf.Media" />
			</MouseBinding.Gesture>
		</MouseBinding>
	</UIElement.InputBindings>
	<Grid>
		<TextBlock
			Foreground="#3B3D50"
			FontSize="28"
			FontWeight="Bold"
			VerticalAlignment="Top"
			Margin="46,60,0,0"
			Text="{Binding Path=Header}" />
		<TextBlock
			Foreground="#3B3D50"
			FontSize="16"
			TextWrapping="Wrap"
			Width="242"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="46,120,0,0"
			Text="{l:Loc SetupInstructionMessage}" />
		<StackPanel
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Margin="46,387,0,0">
			<TextBlock
				FontSize="14"
				Foreground="#3B3D50"
				TextWrapping="Wrap"
				Width="226">
				<Run
					Text="{l:Loc StuckGetHelp}" />
				<LineBreak />
				<Hyperlink
					Click="OpenHelpdeskClick">
					<Run
						Text="{l:Loc OpenHelpdesk}" />
				</Hyperlink>
				<LineBreak />
				<Hyperlink
					Click="ContactSupportClick">
					<Run
						Text="{l:Loc ContactSupport}" />
				</Hyperlink>
			</TextBlock>
		</StackPanel>
		<Button
			Style="{StaticResource TransparentButtonStyle}"
			FontSize="18"
			FontWeight="Bold"
			Width="71"
			Height="26"
			VerticalAlignment="Top"
			HorizontalAlignment="Left"
			Margin="30,545,0,0"
			Content="{l:Loc Back}"
			Command="{Binding DataContext.BackToAppSelectionViewCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
		<Button
			Style="{StaticResource ButtonStyle}"
			FontSize="18"
			FontWeight="Bold"
			Width="235"
			Height="54"
			VerticalAlignment="Top"
			HorizontalAlignment="Right"
			Margin="0,530,60,0"
			Content="{l:Loc Next}"
			Command="{Binding DataContext.NextCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
		<Grid
			Width="710"
			Height="400"
			HorizontalAlignment="Right"
			VerticalAlignment="Top"
			Margin="0,110,60,0">
			<Rectangle
				Fill="#DADDEE"
				Margin="-1,-1" />
			<Controls:CircularProgressBar
				Height="36"
				Width="36"
				Margin="0,-40,0,0" />
			<TextBlock
				VerticalAlignment="Center"
				HorizontalAlignment="Center"
				Foreground="#3B3D50"
				Margin="11,20,0,0"
				FontSize="14"
				Text="{l:Loc LoadingVideo}" />
			<TextBlock
				Name="LengthWorkaround" />
			<media1:MediaElementWrapper xmlns:media1="clr-namespace:Gu.Wpf.Media;assembly=Gu.Wpf.Media"
				media1:MediaElementWrapper.Name="MediaElement"
				media1:MediaElementWrapper.LoadedBehavior="Play"
				media1:MediaElementWrapper.ScrubbingEnabled="True"
				media1:MediaElementWrapper.Stretch="Uniform"
				media1:MediaElementWrapper.Source="{Binding Path=VideoSource}"
				media1:MediaElementWrapper.Position="{Binding Path=Position}"
				x:Name="MediaElement" />
			<Grid
				VerticalAlignment="Bottom">
				<Grid.RowDefinitions>
					<RowDefinition
						Height="Auto" />
					<RowDefinition
						Height="Auto" />
				</Grid.RowDefinitions>
				<Slider
					Name="ProgressSlider"
					Grid.Row="0"
					Minimum="0" xmlns:media1="clr-namespace:Gu.Wpf.Media;assembly=Gu.Wpf.Media"
					Style="{StaticResource {x:Static media1:Styles.ProgressSliderStyleKey}}"
					media1:Drag.PauseWhileDragging="{Binding ElementName=MediaElement}"
					Maximum="{Binding ElementName=MediaElement, Path=Length, Converter={x:Static media1:NullableTimeSpanToSecondsConverter.Default}}"
					Value="{Binding ElementName=MediaElement, Path=Position, Converter={x:Static media1:NullableTimeSpanToSecondsConverter.Default}}" />
				<Grid
					Row="1">
					<FrameworkElement.Resources>
						<ResourceDictionary>
							<Style
								x:Key="{x:Type Button}"
								BasedOn="{StaticResource {x:Static Styles.PlayerButtonBaseStyleKey}}"
								TargetType="{x:Type Button}" />
						</ResourceDictionary>
					</FrameworkElement.Resources>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
					</Grid.ColumnDefinitions>
					<ToggleButton
						Name="PlayPauseButton"
						Foreground="#FFFFFF"
						Grid.Column="0"
						IsChecked="{Binding ElementName=MediaElement, Path=IsPlaying}"
						IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}">
						<FrameworkElement.Style>
							<Style
								BasedOn="{StaticResource {x:Static Styles.PlayerButtonBaseStyleKey}}"
								TargetType="{x:Type ToggleButton}">
								<Setter xmlns:media1="clr-namespace:Gu.Wpf.Media;assembly=Gu.Wpf.Media"
									Property="media1:Icon.Geometry"
									Value="{StaticResource {x:Static media1:Geometries.PauseGeometryKey}}" />
								<Style.Triggers>
									<Trigger
										Property="ToggleButton.IsChecked"
										Value="False">
										<Setter
											Property="Icon.Geometry"
											Value="{StaticResource {x:Static Geometries.PlayGeometryKey}}" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</FrameworkElement.Style>
					</ToggleButton>
					<ToggleButton
						Name="ToggleMutedButton"
						Foreground="#FFFFFF"
						Grid.Column="1"
						IsChecked="{Binding ElementName=MediaElement, Path=IsMuted}"
						IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}">
						<FrameworkElement.Style>
							<Style
								BasedOn="{StaticResource {x:Static Styles.PlayerButtonBaseStyleKey}}"
								TargetType="{x:Type ToggleButton}">
								<Setter
									Property="Icon.Geometry"
									Value="{StaticResource {x:Static Geometries.MuteGeometryKey}}" />
								<Style.Triggers>
									<Trigger
										Property="ToggleButton.IsChecked"
										Value="False">
										<Setter
											Property="Icon.Geometry"
											Value="{StaticResource {x:Static Geometries.UnMuteGeometryKey}}" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</FrameworkElement.Style>
					</ToggleButton>
					<TextBlock
						Name="ProgressTextBlock"
						Grid.Column="2"
						VerticalAlignment="Center"
						Foreground="{Binding ElementName=ToggleMutedButton, Path=Foreground}"
						Opacity="{Binding ElementName=ToggleMutedButton, Path=Opacity}">
						<TextBlock.Text>
							<MultiBinding
								StringFormat="{}{0} / {1}">
								<Binding xmlns:media1="clr-namespace:Gu.Wpf.Media;assembly=Gu.Wpf.Media"
									Converter="{x:Static media1:TimeSpanToStringConverter.Default}"
									ElementName="MediaElement"
									Path="Position" />
								<Binding
									Converter="{x:Static TimeSpanToStringConverter.Default}"
									ElementName="MediaElement"
									Path="Length" />
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</UserControl>
