<UserControl
	x:Class="Krisp.TestKrisp.Views.PlayerControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:l="clr-namespace:Krisp.UI" xmlns:local="clr-namespace:Krisp.TestKrisp.Views" xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" xmlns:Converters="clr-namespace:Krisp.UI.Converters"
	Background="#FFFFFFFF">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<Converters:SecondsToTimeSpan
				x:Key="SecondsToTimeSpan" />
			<DropShadowEffect
				x:Key="MaterialDesignShadowDepth1"
				po:Freeze="True"
				BlurRadius="5"
				ShadowDepth="1"
				Direction="270"
				Opacity=".42"
				RenderingBias="Performance"
				Color="{StaticResource MaterialDesignShadow}" />
			<SolidColorBrush
				x:Key="PrimaryHueLightBrush"
				Color="#FF6371DE" />
			<SolidColorBrush
				x:Key="PrimaryHueLightForegroundBrush"
				Color="#FFFFFF" />
			<SolidColorBrush
				x:Key="PrimaryHueMidBrush"
				Color="#FF6371DE" />
			<SolidColorBrush
				x:Key="PrimaryHueMidForegroundBrush"
				Color="#FFFFFF" />
			<SolidColorBrush
				x:Key="PrimaryHueDarkBrush"
				Color="#FF5371DE" />
			<SolidColorBrush
				x:Key="PrimaryHueDarkForegroundBrush"
				Color="#FFFFFF" />
			<Style
				x:Key="BigToggleButtonStyle"
				TargetType="{x:Type ToggleButton}">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Control.Foreground"
					Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
				<Setter
					Property="Control.Background"
					Value="{DynamicResource PrimaryHueMidBrush}" />
				<Setter
					Property="Control.BorderThickness"
					Value="1" />
				<Setter
					Property="Control.Padding"
					Value="0 1 0 0" />
				<Setter
					Property="Control.Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ToggleButton}">
							<FrameworkTemplate.Resources>
								<ResourceDictionary>
									<SineEase
										x:Key="RippleEasingFunction"
										EasingMode="EaseInOut" />
									<Storyboard
										x:Key="ShowRipple">
										<DoubleAnimation
											Storyboard.TargetName="RippleThumb"
											Storyboard.TargetProperty="Opacity"
											To="0.26"
											Duration="0"
											EasingFunction="{StaticResource RippleEasingFunction}" />
										<DoubleAnimation
											Storyboard.TargetName="RippleThumb"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
											From="1"
											To="2.5"
											Duration="0:0:0.2"
											EasingFunction="{StaticResource RippleEasingFunction}" />
										<DoubleAnimation
											Storyboard.TargetName="RippleThumb"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
											From="1"
											To="2.5"
											Duration="0:0:0.2"
											EasingFunction="{StaticResource RippleEasingFunction}" />
									</Storyboard>
									<Storyboard
										x:Key="HideRipple">
										<DoubleAnimation
											Storyboard.TargetName="RippleThumb"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="0:0:0.3"
											EasingFunction="{StaticResource RippleEasingFunction}" />
									</Storyboard>
								</ResourceDictionary>
							</FrameworkTemplate.Resources>
							<Viewbox
								Width="150">
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup
										x:Name="CheckStates">
										<VisualStateGroup.Transitions>
											<VisualTransition
												From="*"
												To="Checked">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames
														Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
														Storyboard.TargetName="ThumbHolder">
														<EasingDoubleKeyFrame
															KeyTime="0"
															Value="0" />
														<EasingDoubleKeyFrame
															KeyTime="0:0:0.2"
															Value="23.5">
															<EasingDoubleKeyFrame.EasingFunction>
																<QuadraticEase
																	EasingMode="EaseOut" />
															</EasingDoubleKeyFrame.EasingFunction>
														</EasingDoubleKeyFrame>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</VisualTransition>
											<VisualTransition
												From="Checked"
												To="Unchecked">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames
														Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
														Storyboard.TargetName="ThumbHolder">
														<EasingDoubleKeyFrame
															KeyTime="0"
															Value="23.5" />
														<EasingDoubleKeyFrame
															KeyTime="0:0:0.2"
															Value="0">
															<EasingDoubleKeyFrame.EasingFunction>
																<QuadraticEase
																	EasingMode="EaseOut" />
															</EasingDoubleKeyFrame.EasingFunction>
														</EasingDoubleKeyFrame>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</VisualTransition>
										</VisualStateGroup.Transitions>
										<VisualState
											x:Name="Checked">
											<Storyboard>
												<DoubleAnimation
													Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
													Storyboard.TargetName="ThumbHolder"
													Duration="0"
													To="23.5" />
											</Storyboard>
										</VisualState>
										<VisualState
											x:Name="Unchecked">
											<Storyboard>
												<DoubleAnimation
													Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
													Storyboard.TargetName="ThumbHolder"
													Duration="0"
													To="0" />
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Grid>
									<Rectangle
										Name="Track"
										Fill="#FF000000"
										HorizontalAlignment="Left"
										Height="15"
										Margin="4.211,5,4.211,0"
										VerticalAlignment="Top"
										Width="40"
										RadiusY="7.5"
										RadiusX="7.5"
										Opacity="0.26"
										Stroke="{x:Null}" />
									<Grid
										Name="ThumbHolder"
										HorizontalAlignment="Left"
										VerticalAlignment="Top">
										<Ellipse
											Name="RippleThumb"
											Fill="{DynamicResource PrimaryHueLightBrush}"
											Height="25"
											Width="25"
											IsHitTestVisible="False"
											Opacity="0.26"
											Margin="0"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											RenderTransformOrigin="0.5,0.5">
											<UIElement.RenderTransform>
												<ScaleTransform
													ScaleX="1"
													ScaleY="1" />
											</UIElement.RenderTransform>
										</Ellipse>
										<Ellipse
											Name="Thumb"
											Fill="#FFFAFAFA"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Width="25"
											Height="25"
											Margin="0,0,0,0"
											RenderTransformOrigin="0.5,0.5"
											Effect="{DynamicResource MaterialDesignShadowDepth1}"
											Stroke="{x:Null}" />
										<ContentPresenter
											Name="ContentPresenter"
											ContentTemplate="{TemplateBinding ContentTemplate}"
											Content="{TemplateBinding Content}"
											Margin="{TemplateBinding Padding}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											FlowDirection="LeftToRight" />
										<UIElement.RenderTransform>
											<TranslateTransform
												X="0"
												Y="0" />
										</UIElement.RenderTransform>
									</Grid>
								</Grid>
							</Viewbox>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="True">
									<Setter
										TargetName="Thumb"
										Property="Shape.Fill"
										Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
									<Setter
										TargetName="Track"
										Value="{DynamicResource PrimaryHueLightBrush}"
										Property="Shape.Fill" />
									<Setter
										Value="{DynamicResource PrimaryHueMidForegroundBrush}"
										Property="Control.Foreground" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="False">
									<Setter
										Value="{DynamicResource PrimaryHueMidBrush}"
										Property="Control.Foreground" />
								</Trigger>
								<Trigger
									Property="Button.IsDefaulted"
									Value="True" />
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True" />
								<Trigger
									Property="ButtonBase.IsPressed"
									Value="True">
									<TriggerBase.EnterActions>
										<BeginStoryboard
											Storyboard="{StaticResource ShowRipple}" />
									</TriggerBase.EnterActions>
									<TriggerBase.ExitActions>
										<BeginStoryboard
											Storyboard="{StaticResource HideRipple}" />
									</TriggerBase.ExitActions>
								</Trigger>
								<Trigger
									Property="UIElement.IsEnabled"
									Value="False">
									<Setter
										TargetName="Thumb"
										Property="Shape.Fill"
										Value="#BDBDBD" />
									<Setter
										TargetName="Track"
										Property="Shape.Fill">
										<Setter.Value>
											<SolidColorBrush
												Color="Black"
												Opacity=".12" />
										</Setter.Value>
									</Setter>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<StackPanel>
		<StackPanel
			Orientation=" Horizontal"
			HorizontalAlignment="Center"
			Margin="0,90,0,20">
			<TextBlock
				FontSize="16"
				Foreground="#737374"
				TextAlignment="Right"
				VerticalAlignment="Center"
				Width="200"
				Text="{l:Loc OriginalRecording}">
				<FrameworkElement.Style>
					<Style
						TargetType="{x:Type TextBlock}">
						<Style.Triggers>
							<DataTrigger
								Value="False"
								Binding="{Binding IsChecked, ElementName=Toggle}">
								<Setter
									Property="TextBlock.FontWeight"
									Value="Bold" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</FrameworkElement.Style>
			</TextBlock>
			<ToggleButton
				Name="Toggle"
				Style="{StaticResource BigToggleButtonStyle}"
				IsTabStop="False"
				Margin="20,0,15,0"
				IsChecked="{Binding MuteNoise}" />
			<Border
				Width="180"
				Height="110"
				Background="#00FFFFFF"
				HorizontalAlignment="Center"
				Margin="-180,0,0,0"
				MouseLeftButtonUp="Rectangle_MouseLeftButtonUp" />
			<TextBlock
				FontSize="16"
				Foreground="#737374"
				VerticalAlignment="Center"
				TextAlignment="Left"
				Width="200"
				Text="{l:Loc KrispEnabled}">
				<FrameworkElement.Style>
					<Style
						TargetType="{x:Type TextBlock}">
						<Style.Triggers>
							<DataTrigger
								Value="True"
								Binding="{Binding IsChecked, ElementName=Toggle}">
								<Setter
									Property="TextBlock.FontWeight"
									Value="Bold" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</FrameworkElement.Style>
			</TextBlock>
		</StackPanel>
		<TextBlock
			FontSize="22"
			TextAlignment="Center">
			<FrameworkElement.Style>
				<Style
					TargetType="{x:Type TextBlock}">
					<Style.Triggers>
						<DataTrigger
							Value="False"
							Binding="{Binding IsChecked, ElementName=Toggle}">
							<Setter
								Property="TextBlock.Text"
								Value="{l:Loc TurnOnTheToggleToMuteNoise}" />
						</DataTrigger>
						<DataTrigger
							Value="True"
							Binding="{Binding IsChecked, ElementName=Toggle}">
							<Setter
								Property="TextBlock.Text"
								Value="{l:Loc SeeTheDifference}" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</FrameworkElement.Style>
		</TextBlock>
		<Grid
			HorizontalAlignment="Center"
			Width="70">
			<TextBlock
				FontSize="25"
				Foreground="#FF000000"
				FontWeight="Bold"
				Margin="0,35,0,60"
				Text="{Binding Path=PlayerPosition, Converter={StaticResource SecondsToTimeSpan}}" />
		</Grid>
		<StackPanel
			Name="PlayerButtons">
			<StackPanel
				Orientation="Horizontal"
				HorizontalAlignment="Center"
				Width="315"
				Height="56">
				<Button
					Style="{StaticResource NegativeButtonStyle}"
					FontSize="14"
					FontWeight="Normal"
					Width="143"
					Content="{l:Loc RecordAgain}"
					Command="{Binding DataContext.RecordAgainCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
				<Button
					Style="{StaticResource NegativeButtonStyle}"
					FontSize="14"
					FontWeight="Normal"
					Width="143"
					Margin="29,0,0,0"
					Content="{l:Loc ReportAProblem}"
					Command="{Binding DataContext.ReportAnAudioCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
			</StackPanel>
			<Button
				Style="{StaticResource ButtonStyle}"
				FontSize="14"
				FontWeight="Bold"
				Width="315"
				Height="56"
				Margin="0,10,0,0"
				Content="{l:Loc Done}"
				Click="DoneClicked" />
		</StackPanel>
	</StackPanel>
</UserControl>
